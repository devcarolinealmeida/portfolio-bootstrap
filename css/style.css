@import './../../node_modules/bootstrap/dist/css/bootstrap';

/* font/*/
@import './../fonts/webfontkit-20231012-153251/stylesheet.css';

@import 'nav';

*,
*::before,
*::after {
    box-sizing: border-box;
}

:root {
    --scroll: 0;
    --bs-body-font-family: 'pp_morisemibold', sans-serif;
    --bs-nav-link-color: rgb(200, 200, 200);

}

body {
    margin: 0;
    font-size: 16px;
    cursor: none;
}

/* cursor custom */
.cursor-wrapper {
    --cursorXPos: 0;
    --cursorYPos: 0;
    pointer-events: none;
    z-index: 1000;
    justify-content: center;
    align-items: center;
    display: flex;
    position: fixed;
    top: -25px;
    left: -25px;
    transform: translate3d(var(--cursorXPos), var(--cursorYPos), 0);
    transition: tranform 2s cubic-bezier(0.75, 0.885, 0.32, 1.275);
} 
    .cursor-wrapper .cursor {
        width: 2rem;
        height: 2rem;
        background-color: #eafd53;
        border-radius: 100%;
        will-change: transform;
    } 


/* nav bar */
.navbar-toggler:focus {
    box-shadow: 0 0 0 0;
}

.bg-nav {
 /*    --background-opacity: calc(100% - 1% * min(var(--scroll), 30) * 100 / 30);
    background-color: rgb(0, 50, 60, var(--background-opacity))!important; */
    background-color: transparent !important;
}


/* section intro */
.top-section {
    display: flex;
    text-align: start;
    padding: 0;
    position: sticky;
    top: 0;
    /* (oldVal - oldmin) * new Range / old Range + newMin */
    translate: 0 calc(-1% * (max(var(--scroll), 25) - 25) * 100 / 75);
    --background-opacity: calc(100% - 1% * min(var(--scroll), 50) * 100 / 50);
}

.top-section .top {
    flex-basis: 0;
    flex-grow: 1;
    padding: 15rem 4rem;
    background-color: rgb(0, 0, 20, var(--background-opacity));
}

.top-section h1 {
    font-size: clamp(2rem, 1.2353rem + 3.1373vw, 5rem);
}


/* section tab projects */
.tab-projects .tab-projects-container {
    min-height: 25rem;
}

    .tab-projects .nav-link {
        color: rgb(100, 100, 100);
    }

    .tab-projects > .tab-projects-container {
        /* (oldVal - oldmin) * new Range / old Range + newMin */
        --value:  min(var(--scroll), 30) * 50 / 30;
        width: calc(50vw + 1vw * var(--value));
        transform: translateY(calc(50% - 1% * var(--value)));
    }

    @media (width <= 1000px) {
        .tab-projects > .tab-projects-container {
            width: 100vw;
        }
    }

    .tab-projects > * {
        position: fixed;
        width: 100vw;
        bottom: 0;
        z-index: 10;
        translate: 0 100%;
        transition: translate 250ms ease-in-out;
    }
    
        .tab-projects > .show {
            translate: 0 0;
        }
    
        [data-img-to-show] {
            position: absolute;
            top: 20%;
        }